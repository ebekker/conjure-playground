<ContainedItem Label="@Label">
    @*<input type="text" value="@Value" onchange="@(async e => await ValueChanged.InvokeAsync((string)e.Value))" />*@
    <InputNumber Value="@Value" ValueExpression="@(() => Value)" T="int" ValueChanged="@(async v => { await ValueChanged.InvokeAsync(v); CascadedEditContext.Validate(); })" />
    <ValidationMessage For="@(() => Value)" />
</ContainedItem>
@functions
{
    [CascadingParameter]
    EditContext CascadedEditContext { get; set; }

    [Parameter]
    string Label { get; set; }

    [Parameter]
    int Value { get; set; }

    [Parameter]
    EventCallback<int> ValueChanged { get; set; }
}
